// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using infoManagerAPI.Data;

#nullable disable

namespace infoManagerAPI.Migrations
{
    [DbContext(typeof(InfoManagerDbContext))]
    [Migration("20240510143519_InitialCreated")]
    partial class InitialCreated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("infoManagerAPI.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("People", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateOnly(2000, 5, 13),
                            Cpf = "85252256063",
                            Name = "Alex",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateOnly(1995, 1, 13),
                            Cpf = "42002341060",
                            Name = "Bernardo",
                            Status = 2
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateOnly(1989, 1, 21),
                            Cpf = "06053831034",
                            Name = "Carlos",
                            Status = 3
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateOnly(1978, 4, 21),
                            Cpf = "95534329050",
                            Name = "Denilda",
                            Status = 1
                        });
                });

            modelBuilder.Entity("infoManagerAPI.Models.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PhoneNumbers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "(47) 99965-1236",
                            PersonId = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Number = "(47) 3393-1236",
                            PersonId = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Number = "(47) 98965-1276",
                            PersonId = 1,
                            Type = 2
                        });
                });

            modelBuilder.Entity("infoManagerAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "manager@infomanager.com",
                            Password = "oPMoWwfCbA3NIZFEfzkRcNBgNejVfjGgSLqHB086mhU=",
                            Role = 0,
                            Username = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Email = "fulano@infomanager.com",
                            Password = "oPMoWwfCbA3NIZFEfzkRcNBgNejVfjGgSLqHB086mhU=",
                            Role = 1,
                            Username = "Fulano"
                        },
                        new
                        {
                            Id = 3,
                            Email = "beltrano@infomanager.com",
                            Password = "oPMoWwfCbA3NIZFEfzkRcNBgNejVfjGgSLqHB086mhU=",
                            Role = 2,
                            Username = "Beltrano"
                        });
                });

            modelBuilder.Entity("infoManagerAPI.Models.PhoneNumber", b =>
                {
                    b.HasOne("infoManagerAPI.Models.Person", "Person")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("infoManagerAPI.Models.Person", b =>
                {
                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
